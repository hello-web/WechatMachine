
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `tobot`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=121.40.120.1;Initial Catalog=LP.Tobot;uid=sa;pwd=LIDAREN123;`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace WechatBotManager.Models
{
    public partial class tobotDB : Database
    {
        public tobotDB()
            : base("tobot")
        {
            CommonConstruct();
        }

        public tobotDB(string connectionStringName)
            : base(connectionStringName)
        {
            CommonConstruct();
        }

        partial void CommonConstruct();

        public interface IFactory
        {
            tobotDB GetInstance();
        }

        public static IFactory Factory { get; set; }
        public static tobotDB GetInstance()
        {
            if (_instance != null)
                return _instance;

            if (Factory != null)
                return Factory.GetInstance();
            else
                return new tobotDB();
        }

        [ThreadStatic]
        static tobotDB _instance;

        public override void OnBeginTransaction()
        {
            if (_instance == null)
                _instance = this;
        }

        public override void OnEndTransaction()
        {
            if (_instance == this)
                _instance = null;
        }

        public class Record<T> where T : new()
        {
            public static tobotDB repo { get { return tobotDB.GetInstance(); } }
            public bool IsNew() { return repo.IsNew(this); }
            public object Insert() { return repo.Insert(this); }
            public void Save() { repo.Save(this); }
            public int Update() { return repo.Update(this); }
            public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
            public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
            public static int Update(Sql sql) { return repo.Update<T>(sql); }
            public int Delete() { return repo.Delete(this); }
            public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
            public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
            public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
            public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
            public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
            public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
            public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
            public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
            public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
            public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
            public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
            public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
            public static T Single(Sql sql) { return repo.Single<T>(sql); }
            public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
            public static T First(Sql sql) { return repo.First<T>(sql); }
            public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
            public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
            public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
            public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
            public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
            public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
            public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
            public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
            public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
            public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
        }
    }



    [TableName("dbo.wx_buyer")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_buyer : tobotDB.Record<wx_buyer>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string RobotOpenid { get; set; }
        [Column]
        public string RobotWechatid { get; set; }
        [Column]
        public string BuyerOpenid { get; set; }
        [Column]
        public string BuyerWechatid { get; set; }
        [Column]
        public string Nickname { get; set; }
        [Column]
        public bool Isdelete { get; set; }
        [Column]
        public string Createuser { get; set; }
        [Column]
        public DateTime? Createtime { get; set; }
    }

    [TableName("dbo.wx_BuyRecord")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_BuyRecord : tobotDB.Record<wx_BuyRecord>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string OrderNo { get; set; }
        [Column]
        public int RobotId { get; set; }
        [Column]
        public string VerificationCode { get; set; }
        [Column]
        public byte? IsUsed { get; set; }
        [Column]
        public DateTime CreateTime { get; set; }
        [Column]
        public string OpenId { get; set; }
        [Column]
        public string Alias { get; set; }
        [Column]
        public DateTime? UseTime { get; set; }
        [Column]
        public DateTime VerificationCodeTime { get; set; }
        [Column]
        public string GroupId { get; set; }
        [Column]
        public DateTime? BindTime { get; set; }
        [Column]
        public string NickName { get; set; }
    }

    [TableName("dbo.wx_friends")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_friend : tobotDB.Record<wx_friend>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string UserName { get; set; }
        [Column]
        public string NickName { get; set; }
        [Column]
        public string HeadImgUrl { get; set; }
        [Column]
        public byte? Sex { get; set; }
        [Column]
        public string PYQuanPin { get; set; }
        [Column]
        public string RemarkName { get; set; }
        [Column]
        public string Signature { get; set; }
        [Column]
        public string Province { get; set; }
        [Column]
        public string City { get; set; }
        [Column]
        public string Alias { get; set; }
        [Column]
        public byte? StarFriend { get; set; }
        [Column]
        public int? SnsFlag { get; set; }
        [Column]
        public int? AttrStatus { get; set; }
    }

    [TableName("dbo.wx_group")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_group : tobotDB.Record<wx_group>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string GroupId { get; set; }
        [Column]
        public string GroupName { get; set; }
        [Column]
        public string Remark { get; set; }
        [Column]
        public bool Isdelete { get; set; }
        [Column]
        public DateTime? Createtime { get; set; }
        [Column]
        public DateTime? Updatetime { get; set; }
        [Column]
        public string HeadImgUrl { get; set; }
        [Column]
        public int? MemberCount { get; set; }
        [Column]
        public long? OwnerUin { get; set; }
        [Column]
        public string PYQuanPin { get; set; }
        [Column]
        public int RobotId { get; set; }
        [Column]
        public int? BuyerId { get; set; }
        [Column]
        public string UserName { get; set; }
        [Column]
        public string RobotAlias { get; set; }
        [Column]
        public int? Statues { get; set; }
    }

    [TableName("dbo.wx_group_chat")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_group_chat : tobotDB.Record<wx_group_chat>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string Content { get; set; }
        [Column]
        public int MsgType { get; set; }
        [Column]
        public DateTime Createtime { get; set; }
        [Column]
        public string GroupUserName { get; set; }
        [Column]
        public string GroupId { get; set; }
        [Column]
        public string SendUserName { get; set; }
        [Column]
        public string SendAlias { get; set; }
        [Column]
        public int? SendAttrStatus { get; set; }
        [Column]
        public string SendNickName { get; set; }
    }

    [TableName("dbo.wx_group_member")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_group_member : tobotDB.Record<wx_group_member>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string Nickname { get; set; }
        [Column]
        public string Headimgurl { get; set; }
        [Column]
        public string Uin { get; set; }
        [Column]
        public string Remark { get; set; }
        [Column]
        public DateTime? Createtime { get; set; }
        [Column]
        public string GroupId { get; set; }
        [Column]
        public string GroupUserName { get; set; }
        [Column]
        public int RobotId { get; set; }
        [Column]
        public string UserName { get; set; }
        [Column]
        public int AttrStatus { get; set; }
        [Column]
        public bool? IsDelete { get; set; }
    }

    [TableName("dbo.wx_group_space")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_group_space : tobotDB.Record<wx_group_space>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string Groupid { get; set; }
        [Column]
        public string Name { get; set; }
        [Column]
        public string Remark { get; set; }
        [Column]
        public string Status { get; set; }
        [Column]
        public bool Isdelete { get; set; }
        [Column]
        public string Createuser { get; set; }
        [Column]
        public DateTime? Createtime { get; set; }
    }

    [TableName("dbo.wx_robot")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_robot : tobotDB.Record<wx_robot>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string Nickname { get; set; }
        [Column]
        public int? Sex { get; set; }
        [Column]
        public string City { get; set; }
        [Column]
        public string Country { get; set; }
        [Column]
        public string Province { get; set; }
        [Column]
        public string Headimgurl { get; set; }
        [Column]
        public string Remark { get; set; }
        [Column]
        public bool Isdelete { get; set; }
        [Column]
        public DateTime Createtime { get; set; }
        [Column]
        public DateTime? Updatetime { get; set; }
        [Column]
        public string Alias { get; set; }
        [Column]
        public int? MemberCount { get; set; }
        [Column]
        public int Uin { get; set; }
        [Column]
        public string Signature { get; set; }
        [Column]
        public string UserName { get; set; }
        [Column]
        public int? AttrStatus { get; set; }
        [Column]
        public int? Status { get; set; }
        [Column]
        public string QrcodeImg { get; set; }
    }

    [TableName("dbo.wx_robot_chat")]
    [PrimaryKey("Id")]
    [ExplicitColumns]
    public partial class wx_robot_chat : tobotDB.Record<wx_robot_chat>
    {
        [Column]
        public int Id { get; set; }
        [Column]
        public string robotOpenid { get; set; }
        [Column]
        public string robotWechatid { get; set; }
        [Column]
        public string FriendsOpenid { get; set; }
        [Column]
        public string FriendsWechatid { get; set; }
        [Column]
        public string Content { get; set; }
        [Column]
        public int? Type { get; set; }
        [Column]
        public DateTime? Createtime { get; set; }
    }
}

